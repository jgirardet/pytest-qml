name: build

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
#        python-version: [3.6, 3.7, 3.8, "3.9.0-rc.1"]
        qt-lib: [pyqt5, pyside2]
        qtversion: [14, 15]
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - python-version: "3.6"
            tox-env: "py36"
          - python-version: "3.7"
            tox-env: "py37"
          - python-version: "3.8"
            tox-env: "py38"
#          - python-version: "3.9.0-rc.1"
#            tox-env: "py39"
    env:
      DISPLAY: ':99.0'
    steps:
    - uses: actions/checkout@v2
    - name: Set up  Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: setup linux
      if: runner.os == 'Linux'
      run: |
        sudo apt install libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
    - name: Test with tox
      run: |
        tox -e ${{ matrix.tox-env }}-${{ matrix.qt-lib }}${{ matrix.qtversion }} -- -ra --color=yes
#        if: ${{ format('{{{0}-{1}{2} }}', matrix.tox-env, matrix.qt-lib, matrix.qtversion) != 'py39-pyside214' }}


  doc:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - name: mkdocs
        run: |
          pip install -U pip
          pip install mkdocs
          mkdocs build
      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3
        if: "github.event_name == 'push' && github.ref == 'refs/heads/master'"
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

  deploy:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.7"
    - name: Build package
      run: |
        python -m pip install --upgrade pip setuptools
        pip install wheel
        python setup.py sdist bdist_wheel
    - name: Publish package to PyPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
